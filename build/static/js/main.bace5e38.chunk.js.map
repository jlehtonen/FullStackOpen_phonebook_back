{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","exportObject","getAll","axios","get","then","data","create","newPerson","post","remove","id","delete","update","put","Filter","value","handleChange","onChange","PersonForm","name","number","handleNameChange","handleNumberChange","handleSubmit","onSubmit","type","Person","person","handleDelete","onClick","Persons","persons","handlePersonDelete","map","Notification","notification","styles","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setNotification","notificationType","setNotificationType","useEffect","personService","filteredPersons","toLowerCase","includes","existingPerson","find","showNotification","message","setTimeout","target","event","preventDefault","confirmMessage","window","confirm","updatedPerson","newPersons","catch","error","addedPerson","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bace5e38.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => axios.get(baseUrl).then(({ data }) => data);\r\n\r\nconst create = newPerson => axios.post(baseUrl, newPerson).then(({ data }) => data);\r\n\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`);\r\n\r\nconst update = newPerson =>\r\n  axios.put(`${baseUrl}/${newPerson.id}`, newPerson).then(({ data }) => data);\r\n\r\nconst exportObject = {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update,\r\n};\r\n\r\nexport default exportObject;\r\n","const Filter = ({ value, handleChange }) => (\r\n  <div>\r\n    filter shown with <input value={value} onChange={handleChange} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","const PersonForm = ({\r\n  name,\r\n  number,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n  handleSubmit,\r\n}) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <div>\r\n      name: <input value={name} onChange={handleNameChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={number} onChange={handleNumberChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default PersonForm;\r\n","const Person = ({ person, handleDelete }) => (\r\n  <p>\r\n    {person.name} {person.number}{\" \"}\r\n    <button onClick={() => handleDelete(person)}>delete</button>\r\n  </p>\r\n);\r\n\r\nconst Persons = ({ persons, handlePersonDelete }) => (\r\n  <div>\r\n    {persons.map(person => (\r\n      <Person key={person.name} person={person} handleDelete={handlePersonDelete} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Persons;\r\n","const Notification = ({ notification, type }) => {\r\n  if (!notification) {\r\n    return null;\r\n  }\r\n\r\n  const styles = {\r\n    color: type === \"success\" ? \"green\" : \"red\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n\r\n  return <div style={styles}>{notification}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState(\"success\");\n\n  useEffect(() => {\n    personService.getAll().then(persons => setPersons(persons));\n  }, []);\n\n  const filteredPersons = persons.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const existingPerson = persons.find(({ name }) => name === newName);\n\n  const showNotification = (message, type = \"success\") => {\n    setNotificationType(type);\n    setNotification(message);\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (existingPerson) {\n      const confirmMessage = `${newName} is already added to phonebook, replace the old number with a new one?`;\n      if (window.confirm(confirmMessage)) {\n        personService\n          .update({ ...existingPerson, number: newNumber })\n          .then(updatedPerson => {\n            const newPersons = persons.map(person =>\n              person.id === updatedPerson.id ? updatedPerson : person\n            );\n            setPersons(newPersons);\n            setNewName(\"\");\n            setNewNumber(\"\");\n            showNotification(\n              `Changed the number of ${updatedPerson.name} to ${updatedPerson.number}`\n            );\n          })\n          .catch(error => {\n            setPersons(persons.filter(person => person.id !== existingPerson.id));\n            setNewName(\"\");\n            setNewNumber(\"\");\n            showNotification(\n              `Information of ${existingPerson.name} has already been removed from server`,\n              \"error\"\n            );\n          });\n      }\n      return;\n    }\n\n    personService.create({ name: newName, number: newNumber }).then(addedPerson => {\n      setPersons([...persons, addedPerson]);\n      setNewName(\"\");\n      setNewNumber(\"\");\n      showNotification(`Added ${addedPerson.name}`);\n    });\n  };\n\n  const handleNameChange = ({ target }) => {\n    setNewName(target.value);\n  };\n\n  const handleNumberChange = ({ target }) => {\n    setNewNumber(target.value);\n  };\n\n  const handleFilterChange = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const handlePersonDelete = person => {\n    if (!window.confirm(`Delete ${person.name}?`)) {\n      return;\n    }\n\n    personService.remove(person.id).then(() => {\n      setPersons(persons.filter(p => p.id !== person.id));\n      showNotification(`Deleted ${person.name}`);\n    });\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} type={notificationType} />\n      <Filter value={filter} handleChange={handleFilterChange} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} handlePersonDelete={handlePersonDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}